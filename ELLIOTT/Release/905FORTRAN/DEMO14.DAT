c
C McCracken A Guide to FORTRAN IV Programming Case Study 13
C
C Load Fortran system
c use 903 to avoid problem of 14 52 on 905 - perhaps simulator check is too strong?
on 903 64K
at ptr file 905fort(iss6).bin
j 8181

C compile program

nonstop on

at ptp file demo14.bin
at ptr inline
C  CASE STUDY 13
C QUADRATIC EQUATION SOLUTION WITH SUBROUTINES
C
C THIS IS THE MAIN PROGRAM
C
C
      COMMON X1REAL, X1IMAG, X2REAL, X2IMAG
C 
C     ...USE DO TO COUNT PAGES AND SET LIMIT ON OUTPUT
      DO 40 NPAGE = 1, 100
C
C        ...WRITE HEADING AT TOP OF PAGE
         WRITE (3, 10) NPAGE
  10     FORMAT (///, 9X, 1HA, 14X, 1HB, 14X, 1HC, 11X,
     1           7HX1 REAL, 8X, 7HX1 IMAG, 8X, 7HX2 REAL, 
     2           8X, 7HX2 IMAG, 6X, 4HPAGE, I4//)
C
C        ...USE ANOTHER DO TO COUNT LINES
C        ...THERE WILL BE TWO LINES PRINTED PER CARD READ
         DO 30 LINE = 1, 10
C
C           ...READ A DATA CARD
            READ (1, 20) A1, B1, C1, A2, B2, C2
  20        FORMAT (FREE)
C
C           ...CHECK FOR SENTINEL
            IF ( A1 .EQ. 0.0 ) STOP
C
C           ...SOLVE BOTH EQUATIONS AND PRINT RESULTS
            CALL SOLVE  (A1, B1, C1)
            CALL OUTPUT (A1, B1, C1)
            CALL SOLVE  (A2, B2, C2)
            CALL OUTPUT (A2, B2, C2)
  30     CONTINUE
  40  CONTINUE
      END
C
C THIS IS THE SUBROUTINE FOR FINDING ROOTS
C
C      
      SUBROUTINE SOLVE (A, B, C)
      COMMON X1REAL, X1IMAG, X2REAL, X2IMAG
      DOUBLE PRECISION DA, DB, DC, DDISC
C
C CALCULATE DISCRIMINANT 
      DA = A
      DB = B
      DC = C
      DDISC = DB*DB - 4.0D0*DA*DC
      IF (DABS(DDISC) .LT. 1E-8) DDISC = 0D0
      DISC = DDISC
C
C TEST DISCRIMINANT, USING ARITHMETIC IF STATEMENT
      IF ( DISC ) 10, 20, 30
C
C HERE IF DISCRIMINANT IS NEGATIVE -- ROOTS ARE COMPLEX
  10  X1REAL = -B / (2.0 * A)
      X2REAL = X1REAL
      X1IMAG = SQRT(-DISC) / (2.0*A)
      X2IMAG = -X1IMAG
      RETURN
C
C HERE IF DISCRIMINANT IS ZERO -- ROOTS ARE REAL AND EQUAL
  20  X1REAL = -B / (2.0*A)
      X2REAL = X1REAL
      X1IMAG = 0.0
      X2IMAG = 0.0
      RETURN
C
C HERE IF DISCRIMINANT IS POSITIVE -- ROOTS ARE REAL AND UNEQUAL
  30  S = SQRT(DISC)
      X1REAL = (-B + S) / (2.0 * A)
      X2REAL = (-B - S) / (2.0 * A)
      X1IMAG = 0.0
      X2IMAG = 0.0
      RETURN
      END
C
C THIS IS THE SUBROUTINE FOR PRINTING THE RESULTS
C
C
      SUBROUTINE OUTPUT (A, B, C)
      COMMON X1REAL, X1IMAG, X2REAL, X2IMAG
C
C CHECK IF ROOTS ARE PURE REAL
      IF ( X1IMAG .EQ. 0.0 ) WRITE (3, 10) A, B, C, X1REAL, X2REAL
  10  FORMAT (/1P4E15.4, 15X, 1PE15.4)
      IF ( X1IMAG .EQ. 0.0 ) RETURN
C
C CHECK IF ROOTS ARE PURE AND IMAGINARY
      IF ( X1REAL .EQ. 0.0 .AND. X2REAL .EQ. 0.0 )
     1    WRITE (3, 20) A, B, C, X1IMAG, X2IMAG
  20  FORMAT (/1P3E15.4, 15X, 1PE15.4, 15X, 1PE15.4)
      IF ( X1REAL .EQ. 0.0 .AND. X2REAL .EQ. 0.0 ) RETURN
C
C IF WE GET HERE, ROOTS ARE NEITHER PURE REAL NOR PURE IMAGINARY
      WRITE (3, 30) A, B, C, X1REAL, X1IMAG, X2REAL, X2IMAG
  30  FORMAT (/1P7E15.4)
      RETURN
      END
<! Halt !>
<!!>

at tty inline
O12R
<!!>
j 16

c run out of tty input
de ptp

reverse demo14.bin

c load loader
at ptr file ../masir/loader(iss3)(64k).bin
j 8181
st 8171

c load program
at ptr file demo14.bin
at tty inline
O20L<!!>
j 16

c reader unloads, load library tape 1
at ptr file 905fortlib1(iss4).bin
at tty inline
O3L<!!>
j 16

c reader unloads, load library tape 2
at ptr file 905fortlib2(iss5).bin
r

c reader unloads
at tty inline
MM<!!>
at ptr inline

1 	-2 	1 	1 	-10 	25
1 	-3 	2 	2 	-6 	4
1	1	-2550	10	-20	10
1000	-2000	1000	0.02 	-0.04	0.02
1.432	9.876	-4.567	8.813	-1.31	0.0
2.3003	1.9917 	0.0	1.0	0.0	-1.0
1.0	0.0	1.0	9.0	0.0	36.0
1	2	5	535	22	1583
-9	23	37	61	2	87
61	159	87	100	99	98
0	0	0	0	0	0
<!!>
j 16
delete demo14.bin
sh t





